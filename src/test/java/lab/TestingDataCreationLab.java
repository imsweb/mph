/*
 * Copyright (C) 2023 Information Management Services, Inc.
 */
package lab;

import java.io.BufferedWriter;
import java.io.File;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.zip.GZIPOutputStream;

import com.imsweb.mph.MphInput;
import com.imsweb.mph.MphOutput;
import com.imsweb.mph.MphUtils;

public class TestingDataCreationLab {

    // this is a WIP; clearly there are too many combinations to deal with them exhaustively, I need to find a better to create the files...
    public static void main(String[] args) throws IOException {

        String[] sites =
                new String[] {"C000", "C001", "C002", "C003", "C004", "C005", "C006", "C008", "C009", "C019", "C020", "C021", "C022", "C023", "C024", "C028", "C029", "C030", "C031", "C039", "C040",
                        "C041", "C048", "C049", "C050", "C051", "C052", "C058", "C059", "C060", "C061", "C062", "C068", "C069", "C079", "C080", "C081", "C088", "C089", "C090", "C091", "C098", "C099",
                        "C100", "C101", "C102", "C103", "C104", "C108", "C109", "C110", "C111", "C112", "C113", "C118", "C119", "C129", "C130", "C131", "C132", "C138", "C139", "C140", "C142", "C148",
                        "C150", "C151", "C152", "C153", "C154", "C155", "C158", "C159", "C160", "C161", "C162", "C163", "C164", "C165", "C166", "C168", "C169", "C170", "C171", "C172", "C173", "C178",
                        "C179", "C180", "C181", "C182", "C183", "C184", "C185", "C186", "C187", "C188", "C189", "C199", "C209", "C210", "C211", "C212", "C218", "C220", "C221", "C239", "C240", "C241",
                        "C248", "C249", "C250", "C251", "C252", "C253", "C254", "C257", "C258", "C259", "C260", "C268", "C269", "C300", "C301", "C310", "C311", "C312", "C313", "C318", "C319", "C320",
                        "C321", "C322", "C323", "C328", "C329", "C339", "C340", "C341", "C342", "C343", "C348", "C349", "C379", "C380", "C381", "C382", "C383", "C384", "C388", "C390", "C398", "C399",
                        "C400", "C401", "C402", "C403", "C408", "C409", "C410", "C411", "C412", "C413", "C414", "C418", "C419", "C420", "C421", "C422", "C423", "C424", "C440", "C441", "C442", "C443",
                        "C444", "C445", "C446", "C447", "C448", "C449", "C470", "C471", "C472", "C473", "C474", "C475", "C476", "C478", "C479", "C480", "C481", "C482", "C488", "C490", "C491", "C492",
                        "C493", "C494", "C495", "C496", "C498", "C499", "C500", "C501", "C502", "C503", "C504", "C505", "C506", "C508", "C509", "C510", "C511", "C512", "C518", "C519", "C529", "C530",
                        "C531", "C538", "C539", "C540", "C541", "C542", "C543", "C548", "C549", "C559", "C569", "C570", "C571", "C572", "C573", "C574", "C577", "C578", "C579", "C589", "C600", "C601",
                        "C602", "C608", "C609", "C619", "C620", "C621", "C629", "C630", "C631", "C632", "C637", "C638", "C639", "C649", "C659", "C669", "C670", "C671", "C672", "C673", "C674", "C675",
                        "C676", "C677", "C678", "C679", "C680", "C681", "C688", "C689", "C690", "C691", "C692", "C693", "C694", "C695", "C696", "C698", "C699", "C700", "C701", "C709", "C710", "C711",
                        "C712", "C713", "C714", "C715", "C716", "C717", "C718", "C719", "C720", "C721", "C722", "C723", "C724", "C725", "C728", "C729", "C739", "C740", "C741", "C749", "C750", "C751",
                        "C752", "C753", "C754", "C755", "C758", "C759", "C760", "C761", "C762", "C763", "C764", "C765", "C767", "C768", "C770", "C771", "C772", "C773", "C774", "C775", "C778", "C779",
                        "C809"};

        String[] morphs =
                new String[] {"8000/0", "8000/1", "8000/2", "8000/3", "8001/0", "8001/1", "8001/3", "8002/3", "8003/3", "8004/3", "8005/0", "8005/3", "8010/0", "8010/2", "8010/3", "8011/0", "8011/2",
                        "8011/3", "8012/2", "8012/3", "8013/3", "8014/3", "8015/3", "8020/3", "8021/3", "8022/2", "8022/3", "8023/3", "8030/2", "8030/3", "8031/2", "8031/3", "8032/2", "8032/3",
                        "8033/2", "8033/3", "8034/3", "8035/3", "8040/0", "8040/1", "8040/3", "8041/2", "8041/3", "8042/2", "8042/3", "8043/3", "8044/3", "8045/3", "8046/2", "8046/3", "8050/0",
                        "8050/2", "8050/3", "8051/0", "8051/2", "8051/3", "8052/0", "8052/2", "8052/3", "8053/0", "8053/3", "8054/3", "8060/0", "8070/2", "8070/3", "8071/2", "8071/3", "8072/2",
                        "8072/3", "8073/2", "8073/3", "8074/2", "8074/3", "8075/2", "8075/3", "8076/2", "8076/3", "8077/2", "8077/3", "8078/3", "8080/2", "8080/3", "8081/2", "8081/3", "8082/2",
                        "8082/3", "8083/2", "8083/3", "8084/3", "8085/3", "8086/3", "8090/1", "8090/2", "8090/3", "8091/2", "8091/3", "8092/3", "8093/3", "8094/2", "8094/3", "8095/3", "8096/0",
                        "8097/3", "8098/3", "8100/0", "8100/3", "8101/0", "8102/0", "8102/3", "8103/0", "8103/3", "8110/0", "8110/3", "8120/0", "8120/1", "8120/2", "8120/3", "8121/0", "8121/1",
                        "8121/2", "8121/3", "8122/3", "8123/2", "8123/3", "8124/2", "8124/3", "8130/1", "8130/2", "8130/3", "8131/2", "8131/3", "8140/0", "8140/1", "8140/2", "8140/3", "8141/2",
                        "8141/3", "8142/3", "8143/2", "8143/3", "8144/2", "8144/3", "8145/2", "8145/3", "8146/0", "8146/2", "8146/3", "8147/0", "8147/3", "8148/2", "8149/0", "8150/0", "8150/1",
                        "8150/3", "8151/0", "8151/3", "8152/1", "8152/3", "8153/1", "8153/3", "8154/3", "8155/1", "8155/3", "8156/1", "8156/3", "8158/1", "8158/3", "8160/0", "8160/2", "8160/3",
                        "8161/0", "8161/3", "8162/3", "8163/2", "8163/3", "8170/0", "8170/2", "8170/3", "8171/3", "8172/3", "8173/3", "8174/3", "8175/3", "8180/3", "8190/0", "8190/3", "8191/0",
                        "8200/0", "8200/2", "8200/3", "8201/2", "8201/3", "8202/0", "8204/0", "8210/0", "8210/2", "8210/3", "8211/0", "8211/2", "8211/3", "8212/0", "8213/0", "8213/2", "8213/3",
                        "8214/3", "8215/3", "8220/0", "8220/2", "8220/3", "8221/0", "8221/2", "8221/3", "8230/2", "8230/3", "8231/3", "8240/1", "8240/2", "8240/3", "8241/3", "8242/1", "8242/3",
                        "8243/3", "8244/2", "8244/3", "8245/1", "8245/3", "8246/2", "8246/3", "8247/2", "8247/3", "8248/1", "8248/3", "8249/3", "8250/1", "8250/2", "8250/3", "8251/0", "8251/3",
                        "8252/2", "8252/3", "8253/2", "8253/3", "8254/3", "8255/2", "8255/3", "8256/3", "8257/3", "8260/0", "8260/2", "8260/3", "8261/0", "8261/2", "8261/3", "8262/2", "8262/3",
                        "8263/0", "8263/2", "8263/3", "8264/0", "8265/3", "8270/0", "8270/1", "8270/3", "8271/0", "8272/0", "8272/1", "8272/3", "8273/3", "8280/0", "8280/3", "8281/0", "8281/3",
                        "8290/0", "8290/2", "8290/3", "8300/0", "8300/3", "8310/0", "8310/2", "8310/3", "8311/1", "8311/3", "8312/2", "8312/3", "8313/0", "8313/1", "8313/3", "8314/3", "8315/3",
                        "8316/2", "8316/3", "8317/3", "8318/3", "8319/3", "8320/3", "8321/0", "8322/0", "8322/3", "8323/0", "8323/2", "8323/3", "8324/0", "8325/0", "8325/3", "8330/0", "8330/1",
                        "8330/2", "8330/3", "8331/3", "8332/3", "8333/0", "8333/3", "8334/0", "8335/1", "8335/2", "8335/3", "8336/0", "8337/3", "8339/3", "8340/2", "8340/3", "8341/2", "8341/3",
                        "8342/2", "8342/3", "8343/2", "8343/3", "8344/3", "8345/3", "8346/3", "8347/3", "8349/1", "8350/3", "8360/1", "8361/0", "8370/0", "8370/3", "8371/0", "8372/0", "8373/0",
                        "8374/0", "8375/0", "8380/0", "8380/1", "8380/2", "8380/3", "8381/0", "8381/1", "8381/3", "8382/2", "8382/3", "8383/3", "8384/2", "8384/3", "8390/0", "8390/2", "8390/3",
                        "8391/0", "8392/0", "8400/0", "8400/1", "8400/2", "8400/3", "8401/0", "8401/2", "8401/3", "8402/0", "8402/2", "8402/3", "8403/0", "8403/3", "8404/0", "8405/0", "8406/0",
                        "8406/3", "8407/0", "8407/3", "8408/0", "8408/1", "8408/3", "8409/0", "8409/2", "8409/3", "8410/0", "8410/2", "8410/3", "8413/3", "8420/0", "8420/3", "8430/1", "8430/2",
                        "8430/3", "8440/0", "8440/2", "8440/3", "8441/0", "8441/2", "8441/3", "8442/1", "8442/2", "8442/3", "8443/0", "8443/3", "8444/3", "8450/0", "8450/2", "8450/3", "8451/1",
                        "8452/1", "8452/3", "8453/0", "8453/2", "8453/3", "8454/0", "8455/2", "8455/3", "8460/0", "8460/2", "8460/3", "8461/0", "8461/2", "8461/3", "8462/1", "8463/1", "8463/3",
                        "8470/0", "8470/2", "8470/3", "8471/0", "8471/3", "8472/1", "8472/2", "8472/3", "8473/1", "8473/2", "8473/3", "8474/3", "8480/0", "8480/1", "8480/2", "8480/3", "8481/2",
                        "8481/3", "8482/3", "8483/2", "8483/3", "8484/2", "8484/3", "8490/2", "8490/3", "8500/2", "8500/3", "8501/2", "8501/3", "8502/2", "8502/3", "8503/0", "8503/2", "8503/3",
                        "8504/0", "8504/2", "8504/3", "8505/0", "8506/0", "8507/2", "8507/3", "8508/2", "8508/3", "8509/2", "8509/3", "8510/2", "8510/3", "8512/2", "8512/3", "8513/3", "8514/3",
                        "8519/2", "8520/2", "8520/3", "8521/2", "8521/3", "8522/2", "8522/3", "8523/2", "8523/3", "8524/2", "8524/3", "8525/3", "8530/3", "8540/2", "8540/3", "8541/3", "8542/2",
                        "8542/3", "8543/2", "8543/3", "8550/0", "8550/1", "8550/2", "8550/3", "8551/3", "8552/3", "8560/0", "8560/2", "8560/3", "8561/0", "8561/3", "8562/2", "8562/3", "8570/2",
                        "8570/3", "8571/2", "8571/3", "8572/0", "8572/3", "8573/2", "8573/3", "8574/2", "8574/3", "8575/3", "8576/3", "8580/0", "8580/1", "8580/2", "8580/3", "8581/1", "8581/3",
                        "8582/1", "8582/3", "8583/1", "8583/3", "8584/1", "8584/3", "8585/1", "8585/3", "8586/3", "8587/0", "8588/3", "8589/3", "8590/1", "8590/3", "8591/1", "8592/1", "8593/1",
                        "8593/3", "8594/1", "8600/0", "8600/3", "8601/0", "8602/0", "8602/3", "8610/0", "8620/1", "8620/3", "8621/1", "8621/3", "8622/1", "8622/3", "8623/1", "8623/3", "8630/0",
                        "8630/1", "8630/3", "8631/0", "8631/1", "8631/3", "8632/1", "8632/3", "8633/1", "8634/1", "8634/3", "8640/1", "8640/3", "8641/0", "8642/1", "8650/0", "8650/1", "8650/3",
                        "8660/0", "8670/0", "8670/3", "8671/0", "8680/0", "8680/1", "8680/3", "8681/1", "8681/3", "8682/1", "8682/3", "8683/0", "8683/3", "8690/1", "8690/3", "8691/1", "8691/3",
                        "8692/1", "8692/3", "8693/1", "8693/3", "8700/0", "8700/3", "8710/3", "8711/0", "8711/3", "8712/0", "8712/3", "8713/0", "8714/3", "8720/0", "8720/2", "8720/3", "8721/2",
                        "8721/3", "8722/0", "8722/2", "8722/3", "8723/0", "8723/2", "8723/3", "8725/0", "8726/0", "8726/3", "8727/0", "8727/3", "8728/0", "8728/1", "8728/3", "8730/0", "8730/2",
                        "8730/3", "8740/0", "8740/2", "8740/3", "8741/2", "8741/3", "8742/0", "8742/2", "8742/3", "8743/2", "8743/3", "8744/2", "8744/3", "8745/2", "8745/3", "8746/2", "8746/3",
                        "8750/0", "8760/0", "8760/2", "8761/0", "8761/1", "8761/2", "8761/3", "8762/1", "8770/0", "8770/2", "8770/3", "8771/0", "8771/2", "8771/3", "8772/0", "8772/2", "8772/3",
                        "8773/3", "8774/3", "8780/0", "8780/3", "8790/0", "8790/3", "8800/0", "8800/3", "8801/3", "8802/3", "8803/3", "8804/3", "8805/3", "8806/3", "8810/0", "8810/1", "8810/3",
                        "8811/0", "8811/1", "8811/3", "8812/0", "8812/3", "8813/0", "8813/3", "8814/3", "8815/0", "8815/1", "8815/3", "8820/0", "8821/1", "8821/3", "8822/1", "8823/0", "8823/3",
                        "8824/0", "8824/1", "8824/3", "8825/0", "8825/1", "8825/3", "8826/0", "8827/1", "8830/0", "8830/1", "8830/3", "8831/0", "8831/3", "8832/0", "8832/1", "8832/3", "8833/1",
                        "8833/3", "8834/1", "8835/1", "8835/3", "8836/1", "8836/3", "8840/0", "8840/3", "8841/1", "8841/3", "8842/0", "8842/3", "8850/0", "8850/1", "8850/3", "8851/0", "8851/3",
                        "8852/0", "8852/3", "8853/3", "8854/0", "8854/3", "8855/3", "8856/0", "8857/0", "8857/3", "8858/3", "8859/3", "8860/0", "8860/3", "8861/0", "8862/0", "8870/0", "8880/0",
                        "8881/0", "8890/0", "8890/1", "8890/3", "8891/0", "8891/3", "8892/0", "8893/0", "8893/3", "8894/0", "8894/3", "8895/0", "8895/3", "8896/3", "8897/1", "8897/3", "8898/1",
                        "8900/0", "8900/3", "8901/3", "8902/3", "8903/0", "8904/0", "8905/0", "8910/3", "8912/3", "8920/3", "8921/3", "8930/0", "8930/3", "8931/3", "8932/0", "8933/3", "8934/3",
                        "8935/0", "8935/1", "8935/3", "8936/0", "8936/1", "8936/2", "8936/3", "8940/0", "8940/3", "8941/2", "8941/3", "8950/3", "8951/3", "8959/0", "8959/1", "8959/3", "8960/1",
                        "8960/3", "8963/3", "8964/3", "8965/0", "8966/0", "8967/0", "8970/3", "8971/3", "8972/3", "8973/3", "8974/1", "8975/1", "8976/3", "8980/3", "8981/3", "8982/0", "8982/3",
                        "8983/0", "8983/3", "8990/0", "8990/1", "8990/3", "8991/3", "9000/0", "9000/1", "9000/3", "9010/0", "9011/0", "9012/0", "9013/0", "9013/3", "9014/0", "9014/1", "9014/2",
                        "9014/3", "9015/0", "9015/1", "9015/3", "9016/0", "9020/0", "9020/1", "9020/3", "9030/0", "9040/0", "9040/3", "9041/3", "9042/3", "9043/3", "9044/3", "9045/3", "9050/0",
                        "9050/2", "9050/3", "9051/0", "9051/3", "9052/0", "9052/3", "9053/3", "9054/0", "9054/3", "9055/0", "9055/1", "9055/3", "9060/2", "9060/3", "9061/2", "9061/3", "9062/3",
                        "9063/2", "9063/3", "9064/2", "9064/3", "9065/3", "9070/2", "9070/3", "9071/3", "9072/3", "9073/1", "9080/0", "9080/1", "9080/2", "9080/3", "9081/2", "9081/3", "9082/3",
                        "9083/3", "9084/0", "9084/2", "9084/3", "9085/2", "9085/3", "9086/3", "9090/0", "9090/3", "9091/1", "9091/3", "9092/2", "9100/0", "9100/1", "9100/2", "9100/3", "9101/2",
                        "9101/3", "9102/3", "9103/0", "9103/3", "9104/1", "9104/3", "9105/3", "9110/0", "9110/1", "9110/3", "9111/3", "9120/0", "9120/3", "9121/0", "9121/1", "9122/0", "9123/0",
                        "9124/3", "9125/0", "9125/3", "9130/0", "9130/1", "9130/3", "9131/0", "9132/0", "9133/1", "9133/3", "9135/1", "9136/1", "9137/3", "9140/3", "9141/0", "9142/0", "9150/0",
                        "9150/1", "9150/3", "9160/0", "9161/0", "9161/1", "9161/3", "9170/0", "9170/3", "9171/0", "9172/0", "9173/0", "9174/0", "9174/1", "9174/3", "9175/0", "9180/0", "9180/3",
                        "9181/3", "9182/3", "9183/3", "9184/3", "9185/3", "9186/3", "9187/3", "9191/0", "9192/3", "9193/3", "9194/3", "9195/3", "9200/0", "9200/1", "9200/3", "9210/0", "9210/1",
                        "9220/0", "9220/1", "9220/3", "9221/0", "9221/3", "9222/1", "9222/3", "9230/0", "9230/3", "9231/3", "9240/3", "9241/0", "9242/3", "9243/3", "9250/1", "9250/3", "9251/1",
                        "9251/3", "9252/0", "9252/3", "9260/3", "9261/1", "9261/3", "9262/0", "9270/0", "9270/1", "9270/3", "9271/0", "9272/0", "9273/0", "9274/0", "9275/0", "9280/0", "9281/0",
                        "9282/0", "9282/3", "9290/0", "9290/3", "9300/0", "9301/0", "9302/0", "9302/3", "9310/0", "9310/3", "9311/0", "9312/0", "9312/3", "9320/0", "9321/0", "9321/3", "9322/0",
                        "9330/0", "9330/3", "9340/0", "9341/1", "9341/3", "9342/3", "9350/0", "9350/1", "9350/3", "9351/0", "9351/1", "9351/3", "9352/0", "9352/1", "9360/0", "9360/1", "9360/3",
                        "9361/1", "9361/3", "9362/3", "9363/0", "9363/3", "9364/3", "9365/3", "9366/3", "9367/3", "9368/3", "9370/3", "9371/3", "9372/3", "9373/0", "9380/0", "9380/1", "9380/3",
                        "9381/0", "9381/3", "9382/3", "9383/1", "9383/3", "9384/1", "9384/3", "9385/3", "9390/0", "9390/1", "9390/3", "9391/3", "9392/3", "9393/0", "9393/3", "9394/1", "9394/3",
                        "9395/3", "9396/3", "9400/1", "9400/3", "9401/0", "9401/3", "9410/3", "9411/3", "9412/1", "9413/0", "9413/1", "9413/3", "9420/3", "9421/1", "9421/3", "9423/3", "9424/3",
                        "9425/3", "9430/3", "9431/1", "9432/1", "9440/0", "9440/1", "9440/3", "9441/3", "9442/1", "9442/3", "9444/1", "9445/3", "9450/0", "9450/3", "9451/3", "9460/3", "9470/3",
                        "9471/3", "9472/3", "9473/3", "9474/3", "9475/3", "9476/3", "9477/3", "9478/3", "9480/3", "9490/0", "9490/3", "9491/0", "9492/0", "9493/0", "9500/0", "9500/2", "9500/3",
                        "9501/0", "9501/3", "9502/0", "9502/3", "9503/3", "9504/3", "9505/0", "9505/1", "9505/3", "9506/0", "9506/1", "9506/3", "9507/0", "9508/3", "9509/0", "9509/1", "9509/3",
                        "9510/0", "9510/3", "9511/3", "9512/3", "9513/3", "9514/1", "9520/3", "9521/3", "9522/3", "9523/3", "9530/0", "9530/1", "9530/3", "9531/0", "9531/1", "9531/3", "9532/0",
                        "9532/3", "9533/0", "9533/3", "9534/0", "9534/3", "9535/0", "9535/3", "9537/0", "9537/3", "9538/0", "9538/1", "9538/3", "9539/0", "9539/1", "9539/3", "9540/0", "9540/1",
                        "9540/3", "9541/0", "9542/3", "9550/0", "9560/0", "9560/1", "9560/3", "9561/3", "9562/0", "9562/3", "9563/0", "9570/0", "9571/0", "9571/1", "9571/3", "9580/0", "9580/3",
                        "9581/3", "9582/0", "9590/3", "9591/1", "9591/3", "9596/3", "9597/3", "9650/3", "9651/3", "9652/3", "9653/3", "9654/3", "9655/3", "9659/3", "9661/3", "9662/3", "9663/3",
                        "9664/3", "9665/3", "9667/3", "9670/3", "9671/3", "9673/1", "9673/3", "9675/3", "9678/3", "9679/3", "9680/1", "9680/3", "9684/3", "9687/3", "9688/3", "9689/3", "9690/3",
                        "9691/3", "9695/1", "9695/3", "9698/3", "9699/3", "9700/3", "9701/3", "9702/1", "9702/3", "9705/3", "9708/3", "9709/1", "9709/3", "9712/3", "9714/3", "9715/3", "9716/3",
                        "9717/3", "9718/1", "9718/3", "9719/3", "9724/3", "9725/1", "9725/3", "9726/3", "9727/3", "9728/3", "9729/3", "9731/3", "9732/3", "9733/3", "9734/3", "9735/3", "9737/3",
                        "9738/1", "9738/3", "9740/1", "9740/3", "9741/1", "9741/3", "9742/3", "9749/1", "9749/3", "9750/3", "9751/1", "9751/3", "9752/1", "9754/3", "9755/3", "9756/3", "9757/3",
                        "9758/3", "9759/3", "9760/3", "9761/1", "9761/3", "9762/3", "9764/3", "9765/1", "9766/1", "9766/3", "9767/1", "9768/1", "9769/1", "9769/3", "9800/3", "9801/3", "9805/3",
                        "9806/3", "9807/3", "9808/3", "9809/3", "9811/3", "9812/3", "9813/3", "9814/3", "9815/3", "9816/3", "9817/3", "9818/3", "9819/3", "9820/3", "9823/1", "9823/3", "9826/3",
                        "9827/3", "9831/3", "9832/3", "9833/3", "9834/3", "9835/3", "9836/3", "9837/3", "9840/3", "9860/3", "9861/3", "9863/3", "9865/3", "9866/3", "9867/3", "9869/3", "9870/3",
                        "9871/3", "9872/3", "9873/3", "9874/3", "9875/3", "9876/3", "9877/3", "9878/3", "9879/3", "9891/3", "9895/3", "9896/3", "9897/3", "9898/3", "9910/3", "9911/3", "9912/3",
                        "9920/3", "9930/3", "9931/3", "9940/3", "9945/3", "9946/3", "9948/3", "9950/3", "9960/3", "9961/3", "9962/3", "9963/3", "9964/3", "9965/3", "9966/3", "9967/3", "9968/3",
                        "9970/1", "9970/3", "9971/1", "9971/3", "9975/3", "9980/3", "9982/3", "9983/3", "9984/3", "9985/3", "9986/3", "9987/3", "9989/3", "9991/3", "9992/3", "9993/3"};

        int[] lateralityNotPaired = new int[] {0};
        int[] lateralityPaired = new int[] {1, 2, 9}; // 1=paired/right, 2=paired/left, 9=paired/unspecified
        int[] pairedSites =
                new int[] {79, 80, 81, 90, 91, 98, 99, 300, 301, 310, 312, 340, 341, 342, 343, 348, 349, 384, 400, 401, 402, 403, 413, 414, 440, 441, 442, 443, 444, 445, 446, 447, 471, 472, 491, 492,
                        500, 501, 502, 503, 504, 505, 506, 508, 509, 569, 570, 620, 621, 629, 630, 631, 649, 659, 669, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 710, 711, 712, 713, 714, 722,
                        723, 724, 725, 740, 741, 749, 754};

        int[] dxYearRange1 = new int[] {2023};
        int[] dxYearRange2 = new int[] {2023};

        File targetFolder = new File(System.getProperty("user.dir") + "/build");
        if (!targetFolder.exists() && !targetFolder.mkdir())
            throw new IOException("Unable to create target folder");

        for (int dxYear1 : dxYearRange1) {
            for (int dxYea2 : dxYearRange2) {
                File targetFile = new File(targetFolder, "mph-testing-" + dxYear1 + "-" + dxYea2 + ".csv.gz");

                try (BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(new GZIPOutputStream(Files.newOutputStream(targetFile.toPath())), StandardCharsets.US_ASCII))) {

                    writer.write("year1,site1,hist1,beh1,lat1,year2,site2,hist2,beh2,lat2,result\n");

                    for (String site1 : sites) {
                        for (String morph1 : morphs) {
                            String hist1 = morph1.substring(0, 4);
                            String beh1 = morph1.substring(5);

                            int siteNum = Integer.parseInt(site1.substring(1));
                            for (int lat : Arrays.binarySearch(pairedSites, siteNum) >= 0 ? lateralityPaired : lateralityNotPaired) {

                                MphInput input1 = new MphInput();
                                input1.setDateOfDiagnosisYear(String.valueOf(dxYear1));
                                input1.setPrimarySite(site1);
                                input1.setHistologyIcdO3(hist1);
                                input1.setBehaviorIcdO3(beh1);
                                input1.setLaterality(String.valueOf(lat));

                                MphInput input2 = new MphInput();
                                input2.setDateOfDiagnosisYear(String.valueOf(dxYear1));
                                input2.setPrimarySite("C000");
                                input2.setHistologyIcdO3(String.valueOf(8000));
                                input2.setBehaviorIcdO3(String.valueOf(3));
                                input2.setLaterality(String.valueOf(0));

                                MphOutput output = MphUtils.getInstance().computePrimaries(input1, input2);
                                String result = output.getResult().toString().substring(0, 1);

                                List<String> row = new ArrayList<>();
                                row.add(input1.getDateOfDiagnosisYear().substring(2));
                                row.add(input1.getPrimarySite());
                                row.add(input1.getHistology());
                                row.add(input1.getBehavior());
                                row.add(input1.getLaterality());
                                row.add(input2.getDateOfDiagnosisYear().substring(2));
                                row.add(input2.getPrimarySite());
                                row.add(input2.getHistology());
                                row.add(input2.getBehavior());
                                row.add(input2.getLaterality());
                                row.add(result);

                                writer.write(String.join(",", row));
                                writer.write("\n");
                            }
                        }
                    }
                }
            }
        }
    }
}
